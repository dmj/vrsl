namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
default namespace ns1 = "https://dmaus.name/ns/vrsl#"
namespace rdf = "http://www.w3.org/1999/02/22-rdf-syntax-ns#"
namespace rdfs = "http://www.w3.org/2000/01/rdf-schema#"
namespace sh = "http://www.w3.org/ns/shacl#"
namespace xs = "http://www.w3.org/2001/XMLSchema"

a:documentation [ "Autogenerated from the formal ontology" ]
start = ValidationSummary
any-content =
  (element * { any-content }
   | attribute * { text }
   | text)*
foreign-properties = element * - ns1:* { any-content }*
ValidationSummary =
  element ValidationSummary {
    isValid? & result* & instance? & foreign-properties & empty
  }
LineColumnLocator =
  element LineColumnLocator {
    line & column & foreign-properties & empty
  }
Locator =
  element Locator { foreign-properties & empty }
  | LineColumnLocator
  | XPathLocator
  | CustomLocator
XPathLocator =
  element XPathLocator {
    value & document? & foreign-properties & empty
  }
CustomLocator = element CustomLocator { foreign-properties & empty }
ValidationResult =
  element ValidationResult {
    message+
    & instanceLocation*
    & schemaLocation*
    & foreign-properties
    & empty
  }
result = element result { alidationesult }
instanceLocation = element instanceLocation { ocator }
isValid =
  element isValid {
    attribute rdf:datatype {
      "http://www.w3.org/2001/XMLSchema#boolean"
    },
    xsd:boolean
  }
message =
  element message {
    attribute xml:lang { xsd:language }?
    & text
  }
schemaLocation = element schemaLocation { ocator }
value = element value { any-content }
document =
  element document {
    attribute rdf:datatype {
      "http://www.w3.org/2001/XMLSchema#anyURI"
    },
    xsd:anyURI
  }
instance = element instance { any-content }
column =
  element column {
    attribute rdf:datatype {
      "http://www.w3.org/2001/XMLSchema#integer"
    },
    xsd:integer
  }
line =
  element line {
    attribute rdf:datatype {
      "http://www.w3.org/2001/XMLSchema#integer"
    },
    xsd:integer
  }
